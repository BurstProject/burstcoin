############################################################
# Do not modify this file.  Instead, create a file named   #
# 'brs.properties' in the conf directory and make your     #
# changes there.                                           #
# These will overwrite the values defined here!            #
############################################################
#
# Integer parameters can be
# decimal     123
# binary      0b100101               
# hexadecimal 0xAF1D
#
# Boolean parameters can be
# 1, true, yes, on
# 0, false, no, off
# (case insensitive)
#

#### PEER 2 PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other peers.
# If disabled, peer networking servlet will not be started at all.
P2P.shareMyAddress = yes

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to peers,
# and may be different from P2P.Port (useful if you do port forwarding behind a router).
P2P.myAddress =

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and IPv6 interfaces
P2P.Listen = 0.0.0.0

# Port for incoming peer to peer networking requests, if enabled.
P2P.Port = 8123

# Use UPnP-Portforwarding
P2P.UPnP = yes

# My platform, to be announced to peers.
P2P.myPlatform = PC

# A list of peer addresses / host names, separated by '; ' used for faster P2P networking bootstrap.
# TODO: document what is taken if not set

P2P.BootstrapPeers = 87.92.185.249; 147.135.136.189; 52.191.135.100; 80.150.206.52; 62.75.188.216; 51.15.61.5; 13.65.148.45; 23.253.111.88; 51.255.115.70; 206.54.172.55; 192.210.215.146; 206.54.172.57; 5.39.93.90; 37.205.11.73; 192.99.47.76; [2a02:c7f:c420:fa00:a9bb:e842:ba7f:45a4]; 213.112.178.65; 216.8.195.30; 80.245.123.202; 45.32.114.77; 213.239.207.110; 213.93.182.184; 82.181.181.156; 91.121.159.44; 23.237.23.0; 66.49.220.192; 204.45.61.220; 213.59.149.181; 104.211.179.191; 195.230.182.182; 62.248.209.219; 91.211.191.15; 62.212.73.204; 73.119.30.169; 205.209.140.10; 128.171.156.20; 77.53.194.184; 141.52.39.244; 65.33.132.188; 114.55.91.167; 213.250.22.35; 5.9.50.158; 13.82.44.192; 31.208.216.74; 88.99.42.243; 37.48.93.28; 59.19.218.99; 77.82.90.167; 45.37.205.144; 108.34.167.31; 213.32.102.141; 121.183.132.236; 138.68.191.196; 88.99.166.52; 60.234.70.213; 60.234.58.107; 78.94.159.54; 77.176.235.157; 67.246.189.56; 162.208.50.165; 76.168.133.249; 13.94.237.58; 172.103.173.18; 5.189.132.15; 95.223.45.46; 193.150.67.2; 85.25.200.125; 78.47.51.95; 58.136.73.201; 73.226.253.176; 73.93.134.26; 78.240.13.44; 188.68.56.255; 173.199.70.198; 62.173.142.55; 211.202.125.123; 69.136.113.203; 50.4.239.215; 95.96.104.94; 39.106.117.124; 46.237.194.160; 51.15.80.207; 185.203.116.80; 80.241.221.231; 112.161.84.93; 171.244.32.69; 80.122.157.25; 13.72.109.3; 148.251.218.140; 5.189.148.161; 83.170.100.106; 77.177.170.123; 165.227.230.29; 136.144.169.239; 87.73.32.184; 192.237.253.169; 68.69.164.120; 12.16.33.103; 192.99.183.10; 176.31.105.109; 89.79.131.170; 144.76.36.175; 52.178.12.156; 34.232.70.152; 64.22.104.188; 98.223.118.234; 188.232.23.115; 115.87.103.110; 37.97.40.203; 87.155.221.164; 208.98.201.249; 79.165.206.126; 210.61.217.206; 99.52.191.229; 198.100.149.133; 52.233.193.5; 81.237.255.75; 5.251.99.80; 99.6.109.189; 103.242.135.223; 51.15.172.186; 52.187.61.67; 72.81.136.151; [2001:470:19:aa6:fd1a:a05c:5fb:ba97]; 59.110.224.129; 212.24.103.82; 104.128.234.137; 100.11.71.247; 164.106.37.6; 62.210.254.125; 46.223.93.167; 213.140.217.115; 75.136.58.249; 184.57.184.43; 183.156.110.69; 101.100.184.199; 207.246.70.79; 85.216.33.202; 144.76.71.172; 173.212.235.98; 213.133.86.146; 5.35.21.212; 115.70.71.98; 73.155.113.8; 85.217.171.59; 87.98.244.116; 77.66.66.251; 69.143.93.163; 81.6.54.180; 95.165.132.145; 87.184.83.94; 194.132.150.74; 218.38.28.183; 191.37.200.56; 104.175.172.17; 174.58.241.214; 61.171.177.215; 195.209.127.31; 66.227.173.37; 121.135.232.13; 221.154.37.46; 109.238.113.156; 83.170.94.221; 136.243.54.19; 183.106.157.197; 83.170.94.222; 204.12.255.242; 213.59.149.211; 46.129.42.93; 202.77.99.211; 104.53.200.42; 212.56.99.155; 82.135.154.9; 82.164.64.243; 94.254.35.253; 81.83.5.50; 89.106.1.126; 40.125.164.168; 173.249.18.113; 71.233.68.208; 14.36.1.151; 80.241.222.35; 163.172.161.152; 94.130.19.120; 31.209.54.26; 188.194.23.133; 85.195.246.182; 93.88.74.26; 112.78.10.43; 174.138.59.58; 112.167.81.44; 89.218.176.230; 82.247.98.128; 94.100.221.211; 75.70.223.231; 24.192.163.197; 185.203.117.157; 118.217.216.188; 95.31.73.67; 108.238.244.144; 185.223.30.43; 81.217.76.37; 77.225.52.149; 35.182.142.103; 52.166.126.96; 83.209.204.44; 92.206.55.19

# These peers will always be sent rebroadcast transactions. They are also automatically added to P2P.BootstrapPeers, so no need for duplicates.
P2P.rebroadcastTo = 78.46.245.194; 94.130.190.156; 78.130.235.166; 176.9.47.157; 45.76.115.113; 108.61.180.135; 169.239.183.229

# Connect to this many bootstrap connection peers before using the peer database to get connected faster. Please be aware, that higher != better (3-5 are usually good values) Set to 0 or comment out to disable.
P2P.NumBootstrapConnections = 4

# Known bad peers to be blacklisted
P2P.BlacklistedPeers =

# Maintain active connections with at least that many peers. Also more != better (you want good peers, not just many)
P2P.MaxConnections = 20

# Use Peers Database? (Only if not in Offline mode)
P2P.usePeersDb = yes
# Save known peers in the PeersDB? (only if P2P.usePeersDB is true)
P2P.savePeers = yes

# Set to false to disable getting more peers from the currently connected peers. Only useful
# when debugging and want to limit the peers to those in peersDb or P2P.BootstrapPeers.
P2P.getMorePeers = yes

# If database of peers exceed this value more peers will not be downloaded.
# This value will never be below MaxConnections. To high value will slowdown connections.
P2P.getMorePeersThreshold = 400

# Peer networking connect timeout for outgoing connections.
P2P.TimeoutConnect_ms = 4000
# Peer networking read timeout for outgoing connections.
P2P.TimeoutRead_ms = 8000
# Peer networking server idle timeout, milliseconds.
P2P.TimeoutIdle_ms = 30000
# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
P2P.BlacklistingTime_ms = 600000

# Enable re-broadcasting of new transactions until they are received back from at least one
# peer, or found in the blockchain. This feature can optionally be disabled, to avoid the
# risk of revealing that this node is the submitter of such re-broadcasted new transactions.
P2P.enableTxRebroadcast = yes

# Transactions that aren't confirmed for this many blocks start getting rebroadcast.
P2P.rebroadcastTxAfter = 5

# Transactions being rebroadcast get rebroadcast every this many blocks until they are confirmed.
P2P.rebroadcastTxEvery = 2

# Consider a new transaction or block sent after 10 peers have received it.
P2P.sendToLimit=10

# Max number of unconfirmed transactions that will be kept in cache.
P2P.maxUnconfirmedTransactions = 8192

# Max percentage of unconfirmed transactions that have a full hash reference to another transaction kept in cache
P2P.maxUnconfirmedTransactionsFullHashReferencePercentage = 5

# Max amount of unconfirmed transactions that will be asked to a peer at the same time
P2P.limitUnconfirmedTransactionsToRetrieve = 1000

# JETTY pass-through options. See documentation at
# https://www.eclipse.org/jetty/documentation/9.2.22.v20170531/dos-filter.html
# P2P section:
JETTY.P2P.DoSFilter                   = on
JETTY.P2P.DoSFilter.maxRequestsPerSec = 30
JETTY.P2P.DoSFilter.delayMs           = 500
JETTY.P2P.DoSFilter.maxRequestMs      = 300000
JETTY.P2P.DoSFilter.throttleMs        = 30000
JETTY.P2P.DoSFilter.maxIdleTrackerMs  = 30000
JETTY.P2P.DoSFilter.maxWaitMs         = 50
JETTY.P2P.DoSFilter.throttledRequests = 5
JETTY.P2P.DoSFilter.insertHeaders     = true
JETTY.P2P.DoSFilter.trackSessions     = false
JETTY.P2P.DoSFilter.remotePort        = false
JETTY.P2P.DoSFilter.ipWhitelist       = ""
JETTY.P2P.DoSFilter.managedAttr       = true

# see https://www.eclipse.org/jetty/documentation/9.2.22.v20170531/gzip-filter.html
# deflate compression and others ommitted on purpose (pending update to GzipHandler anyway)
JETTY.P2P.GZIPFilter             = on
JETTY.P2P.GZIPFilter.methods     = "GET, POST"
JETTY.P2P.GZIPFilter.bufferSize  = 8192
JETTY.P2P.GZIPFilter.minGzipSize = 0

# Size of the download cache for blocks
brs.blockCacheMB = 40

#### API SERVER ####

# Accept http/json API requests.
API.Server = on

# JETTY pass-through options. See documentation at
# https://www.eclipse.org/jetty/documentation/9.2.22.v20170531/dos-filter.html
# API section:
JETTY.API.DoSFilter                   = off
JETTY.API.DoSFilter.maxRequestsPerSec = 30
JETTY.API.DoSFilter.delayMs           = 500
JETTY.API.DoSFilter.maxRequestMs      = 30000
JETTY.API.DoSFilter.throttleMs        = 30000
JETTY.API.DoSFilter.maxIdleTrackerMs  = 30000
JETTY.API.DoSFilter.maxWaitMs         = 50
JETTY.API.DoSFilter.throttledRequests = 5
JETTY.API.DoSFilter.insertHeaders     = true
JETTY.API.DoSFilter.trackSessions     = false
JETTY.API.DoSFilter.remotePort        = false
JETTY.API.DoSFilter.ipWhitelist       = ""
JETTY.API.DoSFilter.managedAttr       = true

# Jetty-passthrough parameters for API responses GZIP compression. See JETTY.P2P.GZIPFilter
JETTY.API.GZIPFilter             = off
JETTY.API.GZIPFilter.methods     = "GET, POST"
JETTY.API.GZIPFilter.bufferSize  = 8192
JETTY.API.GZIPFilter.minGzipSize = 0

# Developers or maintenance only! Enable API requests used for
# blockchain and database manipulation. If this is enabled and your
# wallet is public, you are very vulnerable.
API.Debug = off

# Hosts or subnets from which to allow http/json API requests, if enabled.
# List delimited by ';', IPv4/IPv6 possible, default: localhost
API.allowed = 127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Does the API accept additional/redundant parameters in an API call?
# default is no (Wallet accepts only params specified for given call)
# enable this if you have a sloppy client interacting, but please be aware that this
# can be a security risk.
API.AcceptSurplusParams = no

# Host interface on which to listen for http/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
API.Listen = 127.0.0.1

# Port for http/json API requests.
API.Port = 8125

# Idle timeout for http/json API request connections, milliseconds.
API.ServerIdleTimeout = 30000

# Directory with html and javascript files for the new client UI, and admin tools utilizing
# the http/json API.
API.UI_Dir = html/ui

# Enable Cross Origin Filter for the API server.
API.CrossOriginFilter = off

# Enable SSL for the API server (also need to set API.SSL_keyStorePath and API.SSL_keyStorePassword).
API.SSL = off

# Enforce requests that require POST to only be accepted when submitted as POST.
API.ServerEnforcePOST = yes

# keystore file and password, required if uiSSL or apiSSL are enabled.
API.SSL_keyStorePath     = keystore
API.SSL_keyStorePassword = password

#### DATABASE ####

# Database connection JDBC url
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
DB.Url=jdbc:mariadb://localhost:3306/burstwallet
DB.Username=
DB.Password=

# Number of concurrent connections to the Database
DB.Connections = 30

# Make H2 database defrag and compact when shutting down.
# This is "off" by default as it can take 2 minutes
# but you really want this to be on after you are aware of this option
Db.H2.DefragOnShutdown = off

# Enable trimming of derived objects tables.
DB.trimDerivedTables = on

# If trimming enabled, maintain enough previous height records to allow rollback of at least
# that many blocks. Must be at least 1440 to allow normal fork resolution. After increasing
# this value, a full re-scan needs to be done in order for previously trimmed records to be
# re-created and preserved.
DB.maxRollback = 1440

# Database default lock timeout in seconds.
DB.LockTimeout = 60

### GPU Acceleration

# enable GPU acceleration
GPU.Acceleration = off
GPU.AutoDetect   = on

# If GPU auto-detection is off (GPU.AutoDetect = off), you must specify manually which one to use
GPU.PlatformIdx = 0
GPU.DeviceIdx   = 0

# GPU memory usage in percent and how many hashes to process in one batch
GPU.MemPercent       = 50
GPU.HashesPerBatch = 1000

# number of unverified transactions in cache before GPU verification starts.
GPU.UnverifiedQueue = 1000

# Uncomment this to limit the number of cpu cores the wallet sees. Default is all available.
# CPU.NumCores = 4


#### DEVELOPMENT ####
# (mere mortals do not need to look beyond this point)

# Set to "yes" to run offline - do not connect to peers and do not listen for incoming peer
# connections. This is equivalent to setting brs.shareMyAddress = no, brs.wellKnownPeers = ,
# DEV.P2P.BootstrapPeers = and brs.usePeersDb = no, and if set to "yes" overrides those properties.
DEV.Offline = no

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will be used.
DEV.TestNet = no

# Database connection JDBC url to use with the test network, if DEV.TestNet
DEV.DB.Url =
DEV.DB.Username =
DEV.DB.Password =

# Time Acceleration in Offline/TestNet configurations (1 = normal time, 2 = twice as fast ...)
DEV.TimeWarp = 1

# Peers used for testnet only.
DEV.P2P.BootstrapPeers =

# Testnet only. These peers will always be sent rebroadcast transactions. They are also automatically added to DEV.P2P.BootstrapPeers, so no need for duplicates.
DEV.P2P.rebroadcastTo =

# Force winning with every deadline
DEV.mockMining = off

# Enter a version. Upon exit, print a list of peers having this version.
DEV.dumpPeersVersion =

# Force re-validation of blocks and transaction at start.
DEV.forceValidate = off

# Force re-build of derived objects tables at start.
DEV.forceScan = off


# Debugging (part of Development - isn't it)

# Used for debugging peer to peer communications.
brs.communicationLoggingMask = 0

# Track balances of the following accounts and related events for debugging purposes.
brs.debugTraceAccounts=

# File name for logging tracked account balances.
brs.debugTraceLog = LOG_AccountBalances_trace.csv

# Separator character for trace log. (default '\t' - TAB)
brs.debugTraceSeparator =

# Quote character for trace log. (default " - double quote)
brs.debugTraceQuote =

# Log changes to unconfirmed balances.
brs.debugLogUnconfirmed = false
