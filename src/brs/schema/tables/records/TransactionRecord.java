/*
 * This file is generated by jOOQ.
*/
package brs.schema.tables.records;


import brs.schema.tables.Transaction;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> {

    private static final long serialVersionUID = -2022269463;

    /**
     * Setter for <code>DB.transaction.db_id</code>.
     */
    public void setDbId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>DB.transaction.db_id</code>.
     */
    public Long getDbId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB.transaction.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>DB.transaction.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>DB.transaction.deadline</code>.
     */
    public void setDeadline(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>DB.transaction.deadline</code>.
     */
    public Short getDeadline() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>DB.transaction.sender_public_key</code>.
     */
    public void setSenderPublicKey(byte... value) {
        set(3, value);
    }

    /**
     * Getter for <code>DB.transaction.sender_public_key</code>.
     */
    public byte[] getSenderPublicKey() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>DB.transaction.recipient_id</code>.
     */
    public void setRecipientId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>DB.transaction.recipient_id</code>.
     */
    public Long getRecipientId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>DB.transaction.amount</code>.
     */
    public void setAmount(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>DB.transaction.amount</code>.
     */
    public Long getAmount() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>DB.transaction.fee</code>.
     */
    public void setFee(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>DB.transaction.fee</code>.
     */
    public Long getFee() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>DB.transaction.height</code>.
     */
    public void setHeight(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>DB.transaction.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>DB.transaction.block_id</code>.
     */
    public void setBlockId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>DB.transaction.block_id</code>.
     */
    public Long getBlockId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>DB.transaction.signature</code>.
     */
    public void setSignature(byte... value) {
        set(9, value);
    }

    /**
     * Getter for <code>DB.transaction.signature</code>.
     */
    public byte[] getSignature() {
        return (byte[]) get(9);
    }

    /**
     * Setter for <code>DB.transaction.timestamp</code>.
     */
    public void setTimestamp(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>DB.transaction.timestamp</code>.
     */
    public Integer getTimestamp() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>DB.transaction.type</code>.
     */
    public void setType(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>DB.transaction.type</code>.
     */
    public Byte getType() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>DB.transaction.subtype</code>.
     */
    public void setSubtype(Byte value) {
        set(12, value);
    }

    /**
     * Getter for <code>DB.transaction.subtype</code>.
     */
    public Byte getSubtype() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>DB.transaction.sender_id</code>.
     */
    public void setSenderId(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>DB.transaction.sender_id</code>.
     */
    public Long getSenderId() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>DB.transaction.block_timestamp</code>.
     */
    public void setBlockTimestamp(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>DB.transaction.block_timestamp</code>.
     */
    public Integer getBlockTimestamp() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>DB.transaction.full_hash</code>.
     */
    public void setFullHash(byte... value) {
        set(15, value);
    }

    /**
     * Getter for <code>DB.transaction.full_hash</code>.
     */
    public byte[] getFullHash() {
        return (byte[]) get(15);
    }

    /**
     * Setter for <code>DB.transaction.referenced_transaction_fullhash</code>.
     */
    public void setReferencedTransactionFullhash(byte... value) {
        set(16, value);
    }

    /**
     * Getter for <code>DB.transaction.referenced_transaction_fullhash</code>.
     */
    public byte[] getReferencedTransactionFullhash() {
        return (byte[]) get(16);
    }

    /**
     * Setter for <code>DB.transaction.attachment_bytes</code>.
     */
    public void setAttachmentBytes(byte... value) {
        set(17, value);
    }

    /**
     * Getter for <code>DB.transaction.attachment_bytes</code>.
     */
    public byte[] getAttachmentBytes() {
        return (byte[]) get(17);
    }

    /**
     * Setter for <code>DB.transaction.version</code>.
     */
    public void setVersion(Byte value) {
        set(18, value);
    }

    /**
     * Getter for <code>DB.transaction.version</code>.
     */
    public Byte getVersion() {
        return (Byte) get(18);
    }

    /**
     * Setter for <code>DB.transaction.has_message</code>.
     */
    public void setHasMessage(Boolean value) {
        set(19, value);
    }

    /**
     * Getter for <code>DB.transaction.has_message</code>.
     */
    public Boolean getHasMessage() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>DB.transaction.has_encrypted_message</code>.
     */
    public void setHasEncryptedMessage(Boolean value) {
        set(20, value);
    }

    /**
     * Getter for <code>DB.transaction.has_encrypted_message</code>.
     */
    public Boolean getHasEncryptedMessage() {
        return (Boolean) get(20);
    }

    /**
     * Setter for <code>DB.transaction.has_public_key_announcement</code>.
     */
    public void setHasPublicKeyAnnouncement(Boolean value) {
        set(21, value);
    }

    /**
     * Getter for <code>DB.transaction.has_public_key_announcement</code>.
     */
    public Boolean getHasPublicKeyAnnouncement() {
        return (Boolean) get(21);
    }

    /**
     * Setter for <code>DB.transaction.ec_block_height</code>.
     */
    public void setEcBlockHeight(Integer value) {
        set(22, value);
    }

    /**
     * Getter for <code>DB.transaction.ec_block_height</code>.
     */
    public Integer getEcBlockHeight() {
        return (Integer) get(22);
    }

    /**
     * Setter for <code>DB.transaction.ec_block_id</code>.
     */
    public void setEcBlockId(Long value) {
        set(23, value);
    }

    /**
     * Getter for <code>DB.transaction.ec_block_id</code>.
     */
    public Long getEcBlockId() {
        return (Long) get(23);
    }

    /**
     * Setter for <code>DB.transaction.has_encrypttoself_message</code>.
     */
    public void setHasEncrypttoselfMessage(Boolean value) {
        set(24, value);
    }

    /**
     * Getter for <code>DB.transaction.has_encrypttoself_message</code>.
     */
    public Boolean getHasEncrypttoselfMessage() {
        return (Boolean) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(Long dbId, Long id, Short deadline, byte[] senderPublicKey, Long recipientId, Long amount, Long fee, Integer height, Long blockId, byte[] signature, Integer timestamp, Byte type, Byte subtype, Long senderId, Integer blockTimestamp, byte[] fullHash, byte[] referencedTransactionFullhash, byte[] attachmentBytes, Byte version, Boolean hasMessage, Boolean hasEncryptedMessage, Boolean hasPublicKeyAnnouncement, Integer ecBlockHeight, Long ecBlockId, Boolean hasEncrypttoselfMessage) {
        super(Transaction.TRANSACTION);

        set(0, dbId);
        set(1, id);
        set(2, deadline);
        set(3, senderPublicKey);
        set(4, recipientId);
        set(5, amount);
        set(6, fee);
        set(7, height);
        set(8, blockId);
        set(9, signature);
        set(10, timestamp);
        set(11, type);
        set(12, subtype);
        set(13, senderId);
        set(14, blockTimestamp);
        set(15, fullHash);
        set(16, referencedTransactionFullhash);
        set(17, attachmentBytes);
        set(18, version);
        set(19, hasMessage);
        set(20, hasEncryptedMessage);
        set(21, hasPublicKeyAnnouncement);
        set(22, ecBlockHeight);
        set(23, ecBlockId);
        set(24, hasEncrypttoselfMessage);
    }
}
