/*
 * This file is generated by jOOQ.
*/
package brs.schema.tables;


import brs.schema.Db;
import brs.schema.Indexes;
import brs.schema.Keys;
import brs.schema.tables.records.AskOrderRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AskOrder extends TableImpl<AskOrderRecord> {

    private static final long serialVersionUID = 253139364;

    /**
     * The reference instance of <code>DB.ask_order</code>
     */
    public static final AskOrder ASK_ORDER = new AskOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AskOrderRecord> getRecordType() {
        return AskOrderRecord.class;
    }

    /**
     * The column <code>DB.ask_order.db_id</code>.
     */
    public final TableField<AskOrderRecord, Long> DB_ID = createField("db_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>DB.ask_order.id</code>.
     */
    public final TableField<AskOrderRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.ask_order.account_id</code>.
     */
    public final TableField<AskOrderRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.ask_order.asset_id</code>.
     */
    public final TableField<AskOrderRecord, Long> ASSET_ID = createField("asset_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.ask_order.price</code>.
     */
    public final TableField<AskOrderRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.ask_order.quantity</code>.
     */
    public final TableField<AskOrderRecord, Long> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.ask_order.creation_height</code>.
     */
    public final TableField<AskOrderRecord, Integer> CREATION_HEIGHT = createField("creation_height", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>DB.ask_order.height</code>.
     */
    public final TableField<AskOrderRecord, Integer> HEIGHT = createField("height", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>DB.ask_order.latest</code>.
     */
    public final TableField<AskOrderRecord, Boolean> LATEST = createField("latest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>DB.ask_order</code> table reference
     */
    public AskOrder() {
        this(DSL.name("ask_order"), null);
    }

    /**
     * Create an aliased <code>DB.ask_order</code> table reference
     */
    public AskOrder(String alias) {
        this(DSL.name(alias), ASK_ORDER);
    }

    /**
     * Create an aliased <code>DB.ask_order</code> table reference
     */
    public AskOrder(Name alias) {
        this(alias, ASK_ORDER);
    }

    private AskOrder(Name alias, Table<AskOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private AskOrder(Name alias, Table<AskOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASK_ORDER_ASK_ORDER_ACCOUNT_ID_IDX, Indexes.ASK_ORDER_ASK_ORDER_ASSET_ID_PRICE_IDX, Indexes.ASK_ORDER_ASK_ORDER_CREATION_IDX, Indexes.ASK_ORDER_ASK_ORDER_ID_HEIGHT_IDX, Indexes.ASK_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AskOrderRecord, Long> getIdentity() {
        return Keys.IDENTITY_ASK_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AskOrderRecord> getPrimaryKey() {
        return Keys.KEY_ASK_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AskOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<AskOrderRecord>>asList(Keys.KEY_ASK_ORDER_PRIMARY, Keys.KEY_ASK_ORDER_ASK_ORDER_ID_HEIGHT_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AskOrder as(String alias) {
        return new AskOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AskOrder as(Name alias) {
        return new AskOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AskOrder rename(String name) {
        return new AskOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AskOrder rename(Name name) {
        return new AskOrder(name, null);
    }
}
