/*
 * This file is generated by jOOQ.
*/
package brs.schema.tables;


import brs.schema.Db;
import brs.schema.Indexes;
import brs.schema.Keys;
import brs.schema.tables.records.AliasOfferRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AliasOffer extends TableImpl<AliasOfferRecord> {

    private static final long serialVersionUID = 1808550683;

    /**
     * The reference instance of <code>DB.alias_offer</code>
     */
    public static final AliasOffer ALIAS_OFFER = new AliasOffer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AliasOfferRecord> getRecordType() {
        return AliasOfferRecord.class;
    }

    /**
     * The column <code>DB.alias_offer.db_id</code>.
     */
    public final TableField<AliasOfferRecord, Long> DB_ID = createField("db_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>DB.alias_offer.id</code>.
     */
    public final TableField<AliasOfferRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.alias_offer.price</code>.
     */
    public final TableField<AliasOfferRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.alias_offer.buyer_id</code>.
     */
    public final TableField<AliasOfferRecord, Long> BUYER_ID = createField("buyer_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>DB.alias_offer.height</code>.
     */
    public final TableField<AliasOfferRecord, Integer> HEIGHT = createField("height", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>DB.alias_offer.latest</code>.
     */
    public final TableField<AliasOfferRecord, Boolean> LATEST = createField("latest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>DB.alias_offer</code> table reference
     */
    public AliasOffer() {
        this(DSL.name("alias_offer"), null);
    }

    /**
     * Create an aliased <code>DB.alias_offer</code> table reference
     */
    public AliasOffer(String alias) {
        this(DSL.name(alias), ALIAS_OFFER);
    }

    /**
     * Create an aliased <code>DB.alias_offer</code> table reference
     */
    public AliasOffer(Name alias) {
        this(alias, ALIAS_OFFER);
    }

    private AliasOffer(Name alias, Table<AliasOfferRecord> aliased) {
        this(alias, aliased, null);
    }

    private AliasOffer(Name alias, Table<AliasOfferRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ALIAS_OFFER_ALIAS_OFFER_ID_HEIGHT_IDX, Indexes.ALIAS_OFFER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AliasOfferRecord, Long> getIdentity() {
        return Keys.IDENTITY_ALIAS_OFFER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AliasOfferRecord> getPrimaryKey() {
        return Keys.KEY_ALIAS_OFFER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AliasOfferRecord>> getKeys() {
        return Arrays.<UniqueKey<AliasOfferRecord>>asList(Keys.KEY_ALIAS_OFFER_PRIMARY, Keys.KEY_ALIAS_OFFER_ALIAS_OFFER_ID_HEIGHT_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AliasOffer as(String alias) {
        return new AliasOffer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AliasOffer as(Name alias) {
        return new AliasOffer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AliasOffer rename(String name) {
        return new AliasOffer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AliasOffer rename(Name name) {
        return new AliasOffer(name, null);
    }
}
